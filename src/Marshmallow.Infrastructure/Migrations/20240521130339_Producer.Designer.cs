// <auto-generated />
using System;
using Marshmallow.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marshmallow.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240521130339_Producer")]
    partial class Producer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Marshmallow.Core.Entities.Consumer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Peer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Header", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Headers");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Producer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Consumer", b =>
                {
                    b.HasOne("Marshmallow.Core.Entities.Group", "Group")
                        .WithMany("Consumers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Group", b =>
                {
                    b.HasOne("Marshmallow.Core.Entities.Topic", "Topic")
                        .WithMany("Groups")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Header", b =>
                {
                    b.HasOne("Marshmallow.Core.Entities.Message", null)
                        .WithMany("Headers")
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Message", b =>
                {
                    b.HasOne("Marshmallow.Core.Entities.Topic", "Topic")
                        .WithMany("Messages")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Marshmallow.Core.Entities.Payload", "Payload", b1 =>
                        {
                            b1.Property<Guid>("MessageId")
                                .HasColumnType("TEXT");

                            b1.Property<byte[]>("Value")
                                .IsRequired()
                                .HasColumnType("BLOB");

                            b1.HasKey("MessageId");

                            b1.ToTable("Messages");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.Navigation("Payload")
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Producer", b =>
                {
                    b.HasOne("Marshmallow.Core.Entities.Topic", "Topic")
                        .WithMany("Producers")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Group", b =>
                {
                    b.Navigation("Consumers");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Message", b =>
                {
                    b.Navigation("Headers");
                });

            modelBuilder.Entity("Marshmallow.Core.Entities.Topic", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Messages");

                    b.Navigation("Producers");
                });
#pragma warning restore 612, 618
        }
    }
}
